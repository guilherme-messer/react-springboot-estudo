# Configuração padrão
spring:
  application:
    name: app-backend
  
  profiles:
    active: local
  
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
  
  redis:
    host: redis
    port: 6379
    timeout: 2000ms
    lettuce:
      pool:
        max-active: 8
        max-idle: 8
        min-idle: 0

server:
  port: 8080
  servlet:
    context-path: /api

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: when-authorized

logging:
  level:
    com.example.app: INFO
    org.springframework.security: DEBUG
  file:
    name: /app/logs/application.log
  pattern:
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

# JWT Configuration
jwt:
  secret: mySecretKey123456789012345678901234567890
  expiration: 86400000 # 24 hours

---
# Perfil local
spring:
  config:
    activate:
      on-profile: local
  
  datasource:
    url: jdbc:postgresql://localhost:5432/appdb
    username: appuser
    password: apppassword
    driver-class-name: org.postgresql.Driver
  
  jpa:
    show-sql: true

  redis:
    host: localhost

logging:
  level:
    com.example.app: DEBUG

---
# Perfil Docker
spring:
  config:
    activate:
      on-profile: docker
  
  datasource:
    url: jdbc:postgresql://postgres:5432/appdb
    username: appuser
    password: apppassword
    driver-class-name: org.postgresql.Driver
  
  jpa:
    show-sql: true

  redis:
    host: redis

logging:
  level:
    com.example.app: INFO

---
# Perfil de produção
spring:
  config:
    activate:
      on-profile: prod
  
  datasource:
    url: ${DATABASE_URL}
    username: ${DATABASE_USERNAME}
    password: ${DATABASE_PASSWORD}
    driver-class-name: org.postgresql.Driver
  
  jpa:
    show-sql: false
    hibernate:
      ddl-auto: validate

  redis:
    host: ${REDIS_HOST:redis}
    password: ${REDIS_PASSWORD:}

jwt:
  secret: ${JWT_SECRET}

logging:
  level:
    com.example.app: WARN
    org.springframework.security: WARN

